generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(uuid())
  name        String   @db.VarChar(200)
  description String   @db.VarChar(200)
  price       Float    @default(0)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @updatedAt @db.Timestamp(0)
  eventDate   DateTime @db.Timestamp(0)
  image_url   String?  @db.VarChar(200)
  rating      Float    @default(0)
  location    String   @db.VarChar(200)
  Spot        Spot[]

  @@map("tb_evento")
}

model Spot {
  id                 String               @id @default(uuid())
  name               String               @db.VarChar(191)
  eventId            String
  status             SpotStatus
  createdAt          DateTime             @default(now()) @db.Timestamp(0)
  updatedAt          DateTime             @updatedAt @db.Timestamp(0)
  Event              Event                @relation(fields: [eventId], references: [id])
  ReservationHistory ReservationHistory[]
  Ticket             Ticket?

  @@map("tb_assento")
}

model Ticket {
  id         String     @id @default(uuid())
  email      String
  ticketKind TicketKind
  createdAt  DateTime   @default(now()) @db.Timestamp(0)
  updatedAt  DateTime   @updatedAt @db.Timestamp(0)
  spotId     String     @unique
  Spot       Spot       @relation(fields: [spotId], references: [id])

  @@map("tb_ticket")
}

model ReservationHistory {
  id         String       @id @default(uuid())
  email      String
  ticketKind TicketKind
  createdAt  DateTime     @default(now()) @db.Timestamp(0)
  updatedAt  DateTime     @updatedAt @db.Timestamp(0)
  spotId     String
  status     TicketStatus
  Spot       Spot         @relation(fields: [spotId], references: [id])

  @@map("tb_resevation_history")
}

enum SpotStatus {
  available
  reserved
}

enum TicketKind {
  full
  half
}

enum TicketStatus {
  reserved
  canceled
}
